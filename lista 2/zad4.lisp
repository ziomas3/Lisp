(defclass punkt() 
		(
			(x :accessor x :initarg :x)
			(y :accessor y :initarg :y) ;initarg jest argumentem kluczym, uzywanym przez make-instance. bez tego bylaby tylko wartosc domyslna
		)
)
(defclass kolo(punkt) 
		(
			(x :accessor x :initarg :x)
			(y :accessor y :initarg :y) 
			(r :accessor r :initarg :r)
		)
)
(defclass prostokat(punkt) 
		(
			(x :accessor x :initarg :x)
			(y :accessor y :initarg :y) 
			(a :accessor a :initarg :a)
			(b :accessor b :initarg :b)
		)
)

(defgeneric pole (x))
(setq pole 0)
(defmethod pole ((x punkt))
(setq pole 0)
)

(defmethod pole ((x kolo))
(setq pole (* pi (r x) (r x)))
)

(defmethod pole ((x prostokat))
(setq pole (* (a x) (b x)))
)


(defgeneric odl (a b))
(setq odleglosc 0)
(defmethod odl ((p punkt) (k kolo))
(setq odleglosc (max (- (sqrt (+ (expt (- (x p) (x k)) )(expt (-(y p) (y k)) ))) (r k)) 0))
)
(defmethod odl ((p punkt) (pr prostokat))
(setq odleglosc (max (sqrt (+ (expt (max (- (abs (- (x p) (x pr))) (/ (b pr) 2) ) 0 ) 2) (expt (max (- (abs (- (y p) (y pr))) (/ (a pr) 2) ) 0 ) 2))) 0))
)
(defmethod odl ((k kolo) (pr prostokat))
(setq odleglosc (max (- (sqrt (+ (expt (max (- (abs (- (x k) (x pr))) (/ (b pr) 2) ) 0 ) 2) (expt (max (- (abs (- (y k) (y pr))) (/ (a pr) 2) ) 0 ) 2))) (r k)) 0))
)
(defmethod odl ((k1 kolo) (k2 kolo))
(setq odleglosc (max (- (sqrt (+ (expt (- (x k1) (x k2)) 2) (expt (-(y k1) (y k2)) 2))) (r k1) (r k2)) 0))
)
(defmethod odl ((p1 punkt) (p2 punkt))
(setq odleglosc (sqrt (+ (expt (- (x p1) (x p2)) 2) (expt (-(y p1) (y p2)) 2))))
)
(defmethod odl ((p1 prostokat) (p2 prostokat))
(setq odleglosc (max (sqrt (+ (expt (max (- (abs (- (x p1) (x p2))) (/ (b p1) 2) (/ (b p2) 2)) 0 ) 2) (expt (max (- (abs (- (y p1) (y p2))) (/ (a p1) 2) (/ (a p2) 2)) 0 ) 2))) 0))
)

(defparameter *x* (make-instance 'punkt))  
(setf (slot-value *x* 'x) 1)
(setf (slot-value *x* 'y) 1)
(defparameter *y* (make-instance 'prostokat))  
(setf (slot-value *y* 'x) 2)
(setf (slot-value *y* 'y) 7)
(setf (slot-value *y* 'a) 1)
(setf (slot-value *y* 'b) 3)
(odl *x* *y*)
(pole *y*)
(print odleglosc)
(print pole)
